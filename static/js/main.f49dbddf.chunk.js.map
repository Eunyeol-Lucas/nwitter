{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","event","provider","GithubAuthProvider","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNweNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","v4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f49dbddf.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();","import React, { useState } from 'react';\nimport { authService } from \"fbase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (e) => {\n      const { name, value } = e.target;\n      if (name === \"email\") {\n        setEmail(value);\n      } else if (name === \"password\") {\n        setPassword(value);\n      }\n    };\n  \n    const onSubmit = async (e) => {\n      e.preventDefault();\n      try {\n        let data;\n        if (newAccount) {\n          //create account\n          data = await createUserWithEmailAndPassword(\n            authService,\n            email,\n            password\n          );\n        } else {\n          // login\n          data = await signInWithEmailAndPassword(authService, email, password);\n        }\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n      <>\n        <form onSubmit={onSubmit} className=\"container\">\n          <input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={onChange}\n            className=\"authInput\"\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}\n            className=\"authInput\"\n          />\n          <input\n            type=\"submit\"\n            value={newAccount ? \"Create Account\" : \"Sign In\"}\n            className=\"authInput authSubmit\"\n          />\n          {error && <span className=\"authError\">{error}</span>}\n        </form>\n        <span onClick={toggleAccount} className=\"authSwitch\">\n          {newAccount ? \"Sign in\" : \"Create Account\"}\n        </span>\n      </>\n    );\n};\n\nexport default AuthForm;","import React from \"react\";\nimport { authService } from \"fbase\";\nimport {\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    } else if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    }\n    const data = await signInWithPopup(authService, provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github\n          <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  // nweet을 수정하고 있는지 아닌지\n  const [editing, setEditing] = useState(false);\n  // input 값 수정\n  const [newNweet, setNweNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you ant to delete this nweet?\");\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNweNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"#\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { v4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`);\n      // storage 참조 경로로 파일 업로드 하기\n      const response = await uploadString(\n        attachmentRef,\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNweet(value);\n  };\n\n  const onFileChange = (e) => {\n    const { files } = e.target;\n    const theFile = files[0]; // 기본적으로 많은 파일을 원하는 만큼 가질 수 있으나, 우리는 한개의 사진만 필요 -> 첫번째 사진만 필요\n    const reader = new FileReader(); // reader를 만들고\n    reader.onloadend = (finishedEvent) => {\n      // reader에 event listener를 추가\n      const { result } = finishedEvent.currentTarget;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile); // 데이터를 얻을 수 있게 됨.\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n        </div>\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n        />\n        {attachment && (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{\n                backgroundImage: attachment,\n              }}\n              alt=\"#\"\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    const q = query(\n      collection(dbService, \"nweets\"),\n      orderBy(\"createdAt\", \"desc\")\n    );\n    onSnapshot(q, (snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n// import { dbService } from \"../fbase\";\n// import { collection, getDocs, query, where, orderBy } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  // const getMyNweets = async () => {\n  //   const q = query(\n  //     collection(dbService, \"nweets\"),\n  //     where(\"creatorId\", \"==\", userObj.uid),\n  //     orderBy(\"createdAt\", \"desc\")\n  //   );\n  //   const querySnapshot = await getDocs(q);\n  //   querySnapshot.docs.map((doc) => console.log(doc.data()));\n  //   // console.log(querySnapshot.docs.map((doc) => doc.date()));\n  // };\n  // useEffect(() => {\n  //   getMyNweets();\n  // });\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, { displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nconst Navigation = ({ userObj }) => {\n  return (\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>{\" \"}\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { updateProfile } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        if (user.displayName === null) {\n          updateProfile(user, {\n            displayName: \"User\",\n          });\n        }\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({ ...user });\n    setUserObj(user);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}